version: '3.8'

services:
  # 主应用服务
  divine-friend-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: divine-friend-backend
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=production
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
    volumes:
      - ./logs:/var/log/divine-friend
      - ./data:/app/data
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - divine-friend-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: divine-friend-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - divine-friend-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: divine-friend-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - divine-friend-backend
    restart: unless-stopped
    networks:
      - divine-friend-network

  # 监控服务 (可选)
  prometheus:
    image: prom/prometheus:latest
    container_name: divine-friend-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - divine-friend-network

  # 日志收集 (可选)
  fluentd:
    image: fluent/fluentd:latest
    container_name: divine-friend-fluentd
    volumes:
      - ./logs:/fluentd/log
      - ./fluentd/conf:/fluentd/etc
    ports:
      - "24224:24224"
    networks:
      - divine-friend-network

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  divine-friend-network:
    driver: bridge 