{
  "name": "divine-friend-pwa",
  "version": "1.0.0",
  "description": "交个神仙朋友 - 东方禅意AI陪伴PWA应用",
  "private": true,
  "homepage": ".",
  "keywords": [
    "pwa",
    "react",
    "typescript",
    "zen",
    "spiritual",
    "ai",
    "fortune",
    "blessing",
    "eastern-philosophy"
  ],
  "author": {
    "name": "Divine Friend Team",
    "email": "team@divine-friend.com",
    "url": "https://divine-friend.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/divine-friend/pwa.git"
  },
  "bugs": {
    "url": "https://github.com/divine-friend/pwa/issues"
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "@types/node": "^20.10.0",
    "@types/react": "^18.2.43",
    "@types/react-dom": "^18.2.17",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-scripts": "5.0.1",
    "typescript": "^5.3.2",
    "web-vitals": "^3.5.0",
    "workbox-background-sync": "^7.0.0",
    "workbox-broadcast-update": "^7.0.0",
    "workbox-cacheable-response": "^7.0.0",
    "workbox-core": "^7.0.0",
    "workbox-expiration": "^7.0.0",
    "workbox-google-analytics": "^7.0.0",
    "workbox-navigation-preload": "^7.0.0",
    "workbox-precaching": "^7.0.0",
    "workbox-range-requests": "^7.0.0",
    "workbox-routing": "^7.0.0",
    "workbox-strategies": "^7.0.0",
    "workbox-streams": "^7.0.0"
  },
  "devDependencies": {
    "@testing-library/jest-dom": "^6.1.5",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^14.5.1",
    "@types/jest": "^29.5.8",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "autoprefixer": "^10.4.16",
    "eslint": "^8.54.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "postcss": "^8.4.32",
    "prettier": "^3.1.0",
    "tailwindcss": "^3.3.6",
    "workbox-cli": "^7.0.0"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build && npm run build-sw",
    "build-sw": "workbox generateSW workbox-config.js",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "lint": "eslint src --ext .ts,.tsx --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,css,json}\"",
    "type-check": "tsc --noEmit",
    "analyze": "npm run build && npx serve -s build",
    "pwa-audit": "lighthouse http://localhost:3000 --view",
    "deploy": "npm run build && npm run deploy:gh-pages",
    "deploy:gh-pages": "gh-pages -d build",
    "clean": "rm -rf build node_modules/.cache",
    "precommit": "npm run lint && npm run type-check",
    "postbuild": "npm run generate-icons",
    "generate-icons": "node scripts/generate-icons.js",
    "dev": "npm start",
    "serve": "npx serve -s build -l 3000"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest",
      "@typescript-eslint/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint",
      "react-hooks"
    ],
    "rules": {
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/no-explicit-any": "warn",
      "react-hooks/rules-of-hooks": "error",
      "react-hooks/exhaustive-deps": "warn",
      "no-console": "warn",
      "prefer-const": "error"
    },
    "overrides": [
      {
        "files": [
          "**/*.test.ts",
          "**/*.test.tsx"
        ],
        "rules": {
          "@typescript-eslint/no-explicit-any": "off"
        }
      }
    ]
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 80,
    "tabWidth": 2,
    "useTabs": false
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{ts,tsx}",
      "!src/**/*.d.ts",
      "!src/index.tsx",
      "!src/reportWebVitals.ts"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 70,
        "functions": 70,
        "lines": 70,
        "statements": 70
      }
    }
  },
  "workbox": {
    "swSrc": "public/sw.js",
    "swDest": "build/sw.js"
  }
} 